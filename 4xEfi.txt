// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © ozcanozbek

//@version=5
indicator(shorttitle="4xEfi v1.2.0", title="4xEfi")
acCizgiEFI = input(defval = false, title = 'ADX Çizgisi Gösterilsin mi?', group="Genel Ayarlar")  

//nQQE 
srcNqq = input(close, group="nQQE Ayarlar")
lengthNqq = input.int(14, 'RSI Length', minval=1, group="nQQE Ayarlar")
SSF = input.int(2, 'SF RSI SMoothing Factor', minval=1, group="nQQE Ayarlar")
RSII = ta.ema(ta.rsi(srcNqq, lengthNqq), SSF)
TR = math.abs(RSII - RSII[1])
wwalpha = 1 / lengthNqq
WWMA = 0.0
WWMA := wwalpha * TR + (1 - wwalpha) * nz(WWMA[1])
ATRRSI = 0.0
ATRRSI := wwalpha * WWMA + (1 - wwalpha) * nz(ATRRSI[1])
QQEF = ta.ema(ta.rsi(srcNqq, lengthNqq), SSF)
QUP = QQEF + ATRRSI * 4.236
QDN = QQEF - ATRRSI * 4.236
QQES = 0.0
QQES := QUP < nz(QQES[1]) ? QUP : QQEF > nz(QQES[1]) and QQEF[1] < nz(QQES[1]) ? QDN : QDN > nz(QQES[1]) ? QDN : QQEF < nz(QQES[1]) and QQEF[1] > nz(QQES[1]) ? QUP : nz(QQES[1])

myNQQE = ((QQEF >= QQES) ? color.new(color.lime, 0) : color.new(color.red, 0))
//plot(10, color=myNQQE, linewidth=4)


//SQZMOM
lengthSQZMOM = input(17, title='BB Length', group="SQZMOM Ayarlar")
mult = input(2.0, title='BB MultFactor', group="SQZMOM Ayarlar")
lengthKC = input(17, title='KC Length', group="SQZMOM Ayarlar")
multKC = input(1.5, title='KC MultFactor', group="SQZMOM Ayarlar")
useTrueRange = input(true, title='Use TrueRange (KC)', group="SQZMOM Ayarlar")

// Calculate BB
srcSQZMOM = close
basis = ta.sma(srcSQZMOM, lengthSQZMOM)
dev = multKC * ta.stdev(srcSQZMOM, lengthSQZMOM)
upperBB = basis + dev
lowerBB = basis - dev

// Calculate KC
maSQZMOM = ta.sma(srcSQZMOM, lengthKC)
range_ = useTrueRange ? ta.tr : high - low
rangema = ta.sma(range_, lengthKC)
upperKC = maSQZMOM + rangema * multKC
lowerKC = maSQZMOM - rangema * multKC

valSQZMOM = ta.linreg(srcSQZMOM - math.avg(math.avg(ta.highest(high, lengthKC), ta.lowest(low, lengthKC)), ta.sma(close, lengthKC)), lengthKC, 0)

kriterSQZMOM = ((valSQZMOM>0 and valSQZMOM > nz(valSQZMOM[1])) or (valSQZMOM<=0 and valSQZMOM > nz(valSQZMOM[1]))) 
ColorSQZMOM = kriterSQZMOM ? color.new(color.lime, 0) : color.new(color.red, 0)
//plot(1, color=ColorSQZMOM, linewidth=4)


//EFI
var cumVol = 0.
cumVol += nz(volume)
if barstate.islast and cumVol == 0
    runtime.error("Hacim Verisine Erişilemiyor!")
length = input.int(5, minval=1, title = "EFI Uzunluğu", group="EFI Ayarları")
efi = ta.ema(ta.change(close) * volume, length)

//myColorY = efi>=0 and efi>efi[1] ? color.lime : color.white
//myColorD = efi<0 and efi<=efi[1] ? color.red : color.yellow

myColorY = efi>=0 and efi>efi[1] ? color.white : color.white
myColorD = efi<0 and efi<=efi[1] ? color.red : color.red

myColor =  efi>=0 ? myColorY : myColorD

//RSI
myTf = timeframe.period
myClose = request.security(syminfo.tickerid, myTf, close)
myRsiD = input.int(14, minval=1, title = "RSI Uzunluğu", group="RSI Ayarları")
myEmaD = input.int(12, minval=1, title = "EMA Uzunluğu", group="RSI Ayarları")
myRsi = ta.rsi(myClose,myRsiD)
myEma = ta.ema(myRsi, myEmaD)

//DMI 
lensig = input.int(14, title="ADX Smoothing", minval=1, maxval=50, group="DMI Ayarlar")
len = input.int(14, minval=1, title="DI Length", group="DMI Ayarlar")
up = ta.change(high)
down = -ta.change(low)
plusDM = na(up) ? na : (up > down and up > 0 ? up : 0)
minusDM = na(down) ? na : (down > up and down > 0 ? down : 0)
trur = ta.rma(ta.tr, len)
plus = fixnan(100 * ta.rma(plusDM, len) / trur)
minus = fixnan(100 * ta.rma(minusDM, len) / trur)
sum = plus + minus
adx = 100 * ta.rma(math.abs(plus - minus) / (sum == 0 ? 1 : sum), lensig)


boyaAdx = efi>0 ? color.new(color.white,0) : color.new(#ff0000,0)
//pAdx = plot(adx, color=boyaAdx, title="ADX",linewidth=2, style =plot.style_circles)
//pPlus = plot(plus, color=color.new(color.lime,0), title="+DI", linewidth=2)
//pMinus = plot(minus, color=color.new(color.red,0), title="-DI",linewidth=2)


myBoya = plus >= minus ? color.new(color.lime,60) : color.new(color.red,66) 
//fill(pPlus, pMinus , title = 'DI+ Bölge', color = myBoya, fillgaps = true)
bgcolor(plus >= minus ?  color.new(color.lime,77) : color.new(color.red,100))
plot(adx and acCizgiEFI? adx : na, color=myColor, title="Elders Force Index",linewidth=2, style =plot.style_circles)


ustCizgiDeger = input.int(75, title = "Üst Çizgisi (SQZMOM) Seviye Değeri", group="DMI Ayarlar" )
plot(ustCizgiDeger, color=ColorSQZMOM, title="Üst Çizgisi (SQZMOM)",linewidth=3)

altCizgiDeger = input.int(-5, title = "Alt Çizgisi (nQQE) Seviye Değeri", group="DMI Ayarlar" )
plot(altCizgiDeger, color=myNQQE, title="Alt Çizgisi (nQQE)",linewidth=3)



//Volume Flow Indicator
vfiLength = input(130, title='VFI uzunluk', group="VFI Ayarlar")
coef = input(0.2, group="VFI Ayarlar")
vcoef = input(0.5, title='Max. vol. cutoff', group="VFI Ayarlar")
signalLength = input(21, group="VFI Ayarlar")
smoothVFI = input(false, group="VFI Ayarlar")

ma(x, y) =>
    sma_1 = ta.sma(x, y)
    smoothVFI ? sma_1 : x

typical = hlc3
inter = math.log(typical) - math.log(typical[1])
vinter = ta.stdev(inter, 30)
cutoff = coef * vinter * close
vave = ta.sma(volume, vfiLength)[1]
vmax = vave * vcoef
vc = volume < vmax ? volume : vmax  //min( volume, vmax )
mf = typical - typical[1]
iff_1 = mf < -cutoff ? -vc : 0
vcp = mf > cutoff ? vc : iff_1

vfi = ma(math.sum(vcp, vfiLength) / vave, 3)
vfima = ta.ema(vfi, signalLength)
d = vfi - vfima


//mySartAl = ta.ema(ta.change(close) * volume, length)>=0 and ta.rsi(myClose,myRsiD) > ta.ema(ta.rsi(myClose,myRsiD), myEmaD)
//mySartAl = ta.rsi(myClose,myRsiD) > ta.ema(ta.rsi(myClose,myRsiD), myEmaD) and plus >= minus and efi>0
mySartAl = ta.rsi(myClose,myRsiD) > ta.ema(ta.rsi(myClose,myRsiD), myEmaD) and plus >= minus and efi>0 and vfi >= vfima
mySartAlSinyal = mySartAl[1]==false and mySartAl


//mySartSat = ta.ema(ta.change(close) * volume, length)<0 or ta.rsi(myClose,myRsiD) <= ta.ema(ta.rsi(myClose,myRsiD), myEmaD)
//mySartSat = ta.rsi(myClose,myRsiD) <= ta.ema(ta.rsi(myClose,myRsiD), myEmaD) and plus >= minus
mySartSat = ta.rsi(myClose,myRsiD) <= ta.ema(ta.rsi(myClose,myRsiD), myEmaD) and plus >= minus and vfi < vfima
mySartSatSinyal = mySartSat[1]==false and mySartSat

plotshape(mySartAlSinyal, title ='AL Fırsatı İşareti', text='', style=shape.triangleup, location=location.bottom, color=color.new(#00e676, 0), offset=0, size=size.tiny)
alertcondition(mySartAlSinyal, title = "myEfi AF", message = "1d myEfi AF {{ticker}}, FİYAT={{close}}")

plotshape(mySartSatSinyal, title ='SAT Fırsatı İşareti', text='', style=shape.triangledown, location=location.top, color=color.new(#ff0000, 0), offset=0, size=size.tiny)
alertcondition(mySartSatSinyal, title = "myEfi SF", message = "1d myEfi SF {{ticker}}, FİYAT={{close}}")


//BURADA BİTTİ
